- SQL分类

  | 分类 | 说明                                                 |
  | :--: | ---------------------------------------------------- |
  | DDL  | 数据定义语言，用来定义数据库对象（数据库，表，字段） |
  | DML  | 数据操作语言，用来对数据库表中的数据进行增删改       |
  | DQL  | 数据查询语言，用来查询数据库中表的记录               |
  | DCL  | 数据控制语言，用来创建数据库用户、控制数据库访问权限 |

- DDL-数据库操作

  - 查询

    查询所有数据库

    ```
    show databases;
    ```

    查询当前数据库

    ```
    select database();
    ```

  - 创建

    ```
    create database [if not exists] 数据库名 [default charset 字符集] [collate 排序规则];
    ```

  - 删除

    ```
    drop database [if exists] 数据库名;
    ```

  - 使用

    ```
    use 数据库名;
    ```

- DDL-表操作-查询，创建

  - 查询当前数据库所有表

    ```
    show tables;
    ```

  - 查询表结构

    ```
    desc 表明;
    ```

  - 查询指定表的建表语句

    ```
    show create table 表名;
    ```

  - 创建表

    ```
    create table 表名(
    	字段1 字段1类型[comment 字段1注释],
    	字段2 字段2类型[comment 字段1注释],
    	字段3 字段3类型[comment 字段1注释],
    	......
    	字段n 字段n类型[comment 字段1注释]
    )[comment 表注释]；
    ```

- DDL-表操作-修改,删除

  - ```
    修改数据类型
    alter table 表名 modify 字段名 新数据类型(长度);
    修改字段名和字段类型
    alter table 表名 change 旧字段名 新字段名 类型(长度)[omment 注释][约束];
    删除字段
    alter table 表名 drop 字段名;
    修改表名
    alter table 表名 rename to 新表名;
    ```

  - ```
    删除表
    drop table [if exists] 表名;
    删除指定表，并创建该表
    truncate table 表名;
    ```

    

----------------------------------------------------------------------------------------------------------------------



- DML-添加数据

  ```
  1.给指定字段添加数据
  insert into 表名(字段名1，字段名2,...) values(值1,值2);
  2.给全部字段添加数据
  insert into 表名 values(值1,值2,...);
  3.批量添加数据
  insert into 表名(字段名1,字段名2...) values((值1,值2...),(值1,值2...),(值1,值2...));
  insert into 表名 values((值1,值2...),(值1,值2...),(值1,值2...));
  ```

- DML-更新数据,删除数据

  ```
  1.更新数据
  update 表名 set 字段名1=值1,字段值2=值2,...[where 条件];
  2.删除数据
  delete from 表名 [where 条件]; 
  ```

  

------

- DQL-基本查询

  ```
  1.查询多个字段
  select 字段1,字段2,字段3... from 表名;
  select * from 表名;
  2.设置别名
  select 字段1[AS 别名1],字段2[AS 别名2],字段3[AS 别名3]... from 表名;
  3.去除重复记录
  select distinct 字段列表 from 表名;
  ```

- DQL-条件查询

  - 语法

    ```
    select 字段列表 from 表名 where 条件列表;
    ```

  - 条件

    | 比较运算符       | 功能                                    |
    | ---------------- | --------------------------------------- |
    | >                | 大于                                    |
    | >=               | 大于等于                                |
    | <                | 小于                                    |
    | <=               | 小于等于                                |
    | =                | 等于                                    |
    | <> 或 !=         | 不等于                                  |
    | between...and... | 在某个范围之内                          |
    | in(...)          | 在in之后的列表中的值，多选一            |
    | like 占位符      | 模糊匹配（_匹配单个字符,%匹配多个字符） |
    | is null          | 是null                                  |

    

| 逻辑运算符 | 功能                         |
| ---------- | ---------------------------- |
| && 或 AND  | 并且（多个条件同时成立）     |
| \|\| 或 OR | 或者（多个条件任意一个成立） |
| ! 或 NOT   | 非，不是                     |

- DQL-聚合函数

  | 函数  | 功能     |
  | ----- | -------- |
  | count | 统计数量 |
  | max   | 最大值   |
  | min   | 最小值   |
  | avg   | 平均值   |
  | sum   | 求和     |

  ```
  语法：select 聚合函数(字段数列) from 表名;
  ```

- DQL-分组查询

  ```
  1.语法
  select 字段列表 from 表名 [where 条件] group by 分组字段名 [having 分组后过滤条件];
  2.where 与 having 区别
  执行时机不同：where 是分组之前进行过滤，不满足 where 条件，不参与分组；而 having 是分组之后对结果进行过滤。
  判断条件不同：where 不能对聚合函数进行判断，而 having 可以。
  ```

- DQL-排序查询

  ```
  1. 语法
  select 字段列表 from 表名 order by 字段1 排序方式1,字段2 排序方式2 ;
  2. 排序方式
  ASC：升序（默认值）
  DESC：降序
  注意：如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序。
  ```

- DQL-分页查询

  ```
  1.语法
  SELECT 字段列表 FROM 表名 LIMIT 起始索引, 查询记录数;
  注意
  · 起始索引从0开始，起始索引 = (查询页码 - 1) * 每页显示记录数。
  · 分页查询是数据库的方言，不同的数据库有不同的实现，MySQL中是LIMIT。
  · 如果查询的是第一页数据，起始索引可以省略，直接简写为 limit 10。
  ```

- DQL-执行顺序

  <img src="C:\Users\46814\AppData\Roaming\Typora\typora-user-images\image-20251021212510152.png" alt="image-20251021212510152" style="zoom: 67%;" />

------



- DCL-用户管理

  ```
  DCL-管理用户
  1. 查询用户
  USE mysql;
  SELECT * FROM user;
  2. 创建用户
  CREATE USER '用户名'@'主机名'
  IDENTIFIED BY '密码';
  3. 修改用户密码
  ALTER USER '用户名'@'主机名'
  IDENTIFIED WITH mysql_native_password BY '新密码';
  4. 删除用户
  DROP USER '用户名'@'主机名';
  ```

- DCL-权限控制

| 权限                | 说明               |
| ------------------- | ------------------ |
| SELECT              | 查询权限           |
| INSERT              | 插入权限           |
| UPDATE              | 修改权限           |
| DELETE              | 删除权限           |
| ALTER               | 修改表             |
| DROP                | 删除数据库/表/视图 |
| CREATE              | 创建数据库/表      |
| ALL, ALL PRIVILEGES | 所有权限           |

```
查询权限SHOW GRANTS FOR '用户名'@'主机名';
授予权限GRANT 权限列表 ON 数据库名.表名 TO '用户名'@'主机名';
撤销权限REVOKE 权限列表 ON 数据库名.表名 FROM '用户名'@'主机名';
```

